/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> (Anton Astafiev) ѱ.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2016 Антон Александрович Астафьев <anton@astafiev.me> (Anton Astafiev). All rights reserved.
 * 
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет org.elliptica.ling;

внеся статичный org.elliptica.ling.ТипГраммемы.*;

/**
 *
 * @author Антон Александрович Астафьев <anton@astafiev.me>
 */
доступный переч Граммема {
	// 0..1
	множественное(Число), единственное(Число),
	// 2..8
	именительный(Падеж), родительный(Падеж), дательный(Падеж), винительный(Падеж), творительный(Падеж), предложный(Падеж), звательный(Падеж),
	// род 9-12
	мужской(Род), женский(Род), средний(Род), обоюдный(Род),
	// 13..15
	настоящее(Время), будущее(Время), прошлое(Время),
	// 16..18
	первое(Лицо), второе(Лицо), третье(Лицо),
	// 19
	повелительное(Наклонение),
	// 20..21
	одушевлённое(Одушевлённость), неодушевлённое(Одушевлённость),
	// 22
	сравнительная(Степень_сравнения),
	// 23..24
	совершенный(Вид), несовершенный(Вид),
	// 25..26
	непереходный(Переходность), переходный(Переходность),
	// 27..28
	действительный(Залог), страдательный(Залог),
	// 29-31
	неизменяемое(НетТипа), аббревиатура(Собственное), отчество(Собственное),
	// 32-33
	локативность(Собственное), организация(Собственное),
	// 34-35
	качественное(Разряд),
	нетМножЧисла(НетТипа),
	// 36-37 (наречия)
	вопросительное(НетТипа), указательное(НетТипа), // для наречий
	// 38..39
	имя(Собственное), фамилия(Собственное),
	// 40
	безличный(НетТипа),
	// 41,42
	жаргонизм(Стиль), опечатка(Стиль),
	// 43,44,45
	разговорное(Стиль), притяжательное(Специальный_падеж), архаизм(Стиль),
	// для второго родительного и второго предложного
	нестандПадеж(Специальный_падеж),
	поэтизм(Стиль), профессионализм(Стиль),
	превосходная(Степень_сравнения), poloj(НетТипа)
	;

	Граммема(ТипГраммемы типГраммемы) {
		это.типГраммемы = типГраммемы;
		типГраммемы.updateLimits(это);
	}

	личный итоговый ТипГраммемы типГраммемы;

	доступный Строка коротко() {
		если (ordinal() <= третье.ordinal()) {
			цел смещение = ordinal() - база().ordinal();
			верни Названия.краткие_имена[типГраммемы.ordinal()][смещение];
		} иначе {
			верни toString();
		}
	}

	доступный Граммема база() {
		верни тип().границы()[0];
	}

	доступный ТипГраммемы тип() {
		верни типГраммемы;
	}

	доступный логическое тип(ТипГраммемы проверка) {
		верни это.тип() == проверка;
	}

	личный Строка описание(цел смещение) {
		StringBuilder sb = новый StringBuilder(64);
		Строка название = Названия.полные_имена[тип().ordinal()][смещение];
		sb.append(название).append(' ').append(типГраммемы.имя());
		верни sb.toString();
	}

	@Подмени
	доступный Строка toString() {
		выбери (это) {
			случай повелительное:
				верни описание(2);
			случай сравнительная:
				верни описание(1);
			случай превосходная:
				верни описание(2);
			запасной:
				если (ordinal() <= страдательный.ordinal()) {
					цел смещение = ordinal() - база().ordinal();
					верни описание(смещение);
				} иначе {
					верни это.name();
				}
		}
	}
}
