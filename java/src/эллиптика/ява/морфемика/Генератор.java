/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> ѱ 2017.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2017 Anton Astafiev <anton@astafiev.me>. All rights reserved.
 *
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет эллиптика.ява.морфемика;

внеся java.util.logging.Level;
внеся java.util.logging.Logger;
внеся java.util.stream.Collectors;
внеся java.util.stream.Stream;
внеся java.util.Массивы;
внеся java.util.ПорядковыйСписок;
внеся java.util.Список;
внеся org.elliptica.ling.ЧастьРечи;
внеся эллиптика.ява.морфемика.гл.ОтглСуффиксДействия;


/**
 *
 * @автор Антон Александрович Астафьев {@буквально <anton@astafiev.me>} (Anton Astafiev)
 */
доступный класс Генератор {
	доступный статичный тщетный main(Строка[] арг){
		попробуй {
			Строка суффиксы[] = {"ат", "ив", "н", "ость"};
			новый Генератор().запуск("деклар", суффиксы);
		} ловя (ОшибкаСловообразования ош) {
			ЖУРНАЛ.log(Level.SEVERE, ничто, ош);
		}
	}

	доступный Строка запуск(Строка корень, Строка суффиксы[]) кидает ОшибкаСловообразования{
		Список<Морфема> слово = новый ПорядковыйСписок<>();
		слово.добавь(новый Корень(корень, ЧастьРечи.глагол));

		Список<? расширяет Морфема> морфемы = Массивы.списком(суффиксы).поток()
				.map(ОтглСуффиксДействия::новый).collect(Collectors.toList());

		для (Морфема морфема: морфемы){
			слово = морфема.примениК(слово);
		}
		Строка рез = слово.поток().map(м -> м.значение()).reduce("", (лев, прав) -> лев+прав);
		верни рез;
	}

	личный статичный итоговый Logger ЖУРНАЛ = Logger.getLogger(Генератор.класс.дайИмя());
}
