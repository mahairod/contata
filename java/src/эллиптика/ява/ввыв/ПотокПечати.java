/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> (Anton Astafiev) ѱ.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2016 Антон Александрович Астафьев <anton@astafiev.me> (Anton Astafiev). All rights reserved.
 * 
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет эллиптика.ява.ввыв;

внеся java.io.FileNotFoundException;
внеся java.io.OutputStream;
внеся java.io.PrintStream;
внеся java.io.UnsupportedEncodingException;
внеся java.util.Locale;

/**
 *
 * @author Антон Александрович Астафьев {@literal <anton@astafiev.me>}
 */
доступный класс ПотокПечати расширяет PrintStream {

	доступный ПотокПечати(Файл файл, Строка csn) кидает FileNotFoundException, UnsupportedEncodingException {
		поверх(файл, csn);
	}

	доступный ПотокПечати(Файл файл) кидает FileNotFoundException {
		поверх(файл);
	}

	доступный ПотокПечати(Строка имяФайла, Строка csn) кидает FileNotFoundException, UnsupportedEncodingException {
		поверх(имяФайла, csn);
	}

	доступный ПотокПечати(Строка имяФайла) кидает FileNotFoundException {
		поверх(имяФайла);
	}

	доступный ПотокПечати(OutputStream вывод, логическое автоСлив, Строка кодировка) кидает UnsupportedEncodingException {
		поверх(вывод, автоСлив, кодировка);
	}

	доступный ПотокПечати(OutputStream вывод, логическое автоСлив) {
		поверх(вывод, автоСлив);
	}

	доступный ПотокПечати(OutputStream вывод) {
		поверх(вывод);
	}

	доступный PrintStream дополни(символ с) {
		верни поверх.append(с);
	}

	доступный PrintStream дополни(CharSequence csq, цел начало, цел конец) {
		верни поверх.append(csq, начало, конец);
	}

	доступный PrintStream дополни(CharSequence csq) {
		верни поверх.append(csq);
	}

	доступный PrintStream формат(Locale l, Строка формат, Object... аргументы) {
		верни поверх.format(l, формат, аргументы);
	}

	доступный PrintStream формат(Строка формат, Object... аргументы) {
		верни поверх.format(формат, аргументы);
	}

	доступный PrintStream печатьф(Locale l, Строка формат, Object... аргументы) {
		верни поверх.printf(l, формат, аргументы);
	}

	доступный PrintStream печатьф(Строка формат, Object... аргументы) {
		верни поверх.printf(формат, аргументы);
	}

	доступный тщетный печатьстр(Object x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(Строка x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(символ[] x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(ширдроб x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(дроб x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(ширцел x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(цел x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(символ x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр(логическое x) {
		поверх.println(x);
	}

	доступный тщетный печатьстр() {
		поверх.println();
	}

	доступный тщетный печать(Object obj) {
		поверх.print(obj);
	}

	доступный тщетный печать(Строка s) {
		поверх.print(s);
	}

	доступный тщетный печать(символ[] s) {
		поверх.print(s);
	}

	доступный тщетный печать(ширдроб d) {
		поверх.print(d);
	}

	доступный тщетный печать(дроб f) {
		поверх.print(f);
	}

	доступный тщетный печать(ширцел l) {
		поверх.print(l);
	}

	доступный тщетный печать(цел i) {
		поверх.print(i);
	}

	доступный тщетный печать(символ с) {
		поверх.print(с);
	}

	доступный тщетный печать(логическое b) {
		поверх.print(b);
	}

	доступный тщетный пиши(байт[] buf, цел off, цел len) {
		поверх.write(buf, off, len);
	}

	доступный тщетный пиши(цел b) {
		поверх.write(b);
	}

	защищённый тщетный очистиОшибку() {
		поверх.clearError();
	}

	защищённый тщетный установиОшибку() {
		поверх.setError();
	}

	доступный логическое проверьОшибку() {
		верни поверх.checkError();
	}

	доступный тщетный закрой() {
		поверх.close();
	}

	доступный тщетный слей() {
		поверх.flush();
	}

}
