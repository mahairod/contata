/*
 *  Лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет org.elliptica.ling;

внеся java.util.Множество;
внеся java.util.МножествоСвёрток;

/**
 *
 * @author Антон Астафьев <anton@astafiev.me> (Anton Astafiev)
 */
доступный класс ФормаСлова расширяет БазаСловоформы воплощает Словоформа {

	доступный ФормаСлова(ЧастьРечи частьРечи, Строка слово, ширцел граммемы, Парадигма парадигма) {
		это.частьРечи = частьРечи;
		это.слово = слово;
		маскаГраммем = граммемы;
		это.парадигма = парадигма;
	}

	@Подмени
	доступный Строка дайСлово() {
		верни слово;
	}
	@Подмени
	доступный ЧастьРечи дайЧастьРечи() {
		верни частьРечи;
	}
	@Подмени
	доступный Множество<Граммема> дайГраммемы() {
		Множество<Граммема> результат = новый МножествоСвёрток<>(Long.bitCount(маскаГраммем));
		Граммема[] граммемы = Граммема.values();
		ширцел рабКопия = маскаГраммем;
		пока (рабКопия!=0) {
			ширцел бит = Long.lowestOneBit(рабКопия);
			рабКопия ^= бит;
			цел поз = Long.numberOfTrailingZeros(бит);
			Граммема граммема = граммемы[поз];
			результат.добавь(граммема);
		}
		верни результат;
	}

	доступный ширцел дайМаскуГраммем() {
		верни маскаГраммем;
	}

	доступный Парадигма дайПарадигму() {
		верни парадигма;
	}

	личный итоговый ЧастьРечи частьРечи;
	личный итоговый Строка слово;
	личный итоговый ширцел маскаГраммем;
	личный итоговый Парадигма парадигма;
}
