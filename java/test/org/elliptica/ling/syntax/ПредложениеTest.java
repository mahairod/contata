/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> (Anton Astafiev) ѱ.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2015 Антон Александрович Астафьев <anton@astafiev.me> (Anton Astafiev). All rights reserved.
 * 
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */
пакет org.elliptica.ling.syntax;

внеся java.util.logging.Level;
внеся java.util.logging.Logger;
внеся javax.xml.bind.JAXBContext;
внеся javax.xml.bind.JAXBException;
внеся javax.xml.bind.Marshaller;
внеся org.junit.BeforeClass;
внеся org.junit.Test;
внеся статичный org.junit.Assert.*;
внеся java.util.ПорядковыйСписок;
внеся эллиптика.ява.язык.Система;

/**
 *
 * @author Антон Александрович Астафьев {@literal <anton@astafiev.me>} (Anton Astafiev)
 */
доступный класс ПредложениеTest {
	
	доступный ПредложениеTest() {
	}
	
	статичный Class[] classes = новый Class[]{
			Предложение.класс, Фрагмент.класс, СвязьФрагментов.класс, Слово.класс, Диапазон.класс
	};
	
	@BeforeClass
	доступный статичный тщетный setUpClass() {
		попробуй {
			jc = JAXBContext.newInstance(classes);
		} ловя (JAXBException ex) {
			Logger.getLogger(ПредложениеTest.класс.getName()).log(Level.SEVERE, ничто, ex);
			fail(ex.getMessage());
		}
	}
	
	личный статичный JAXBContext jc;

	/**
	 * Test of getСписокСлов method, of класс Предложение.
	 */
	@Test
	доступный тщетный testGetСписокСлов() кидает JAXBException {
		Система.вывод.печатьстр("getСписокСлов");
		Marshaller marshaller = jc.createMarshaller();
		marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
		
		Предложение предложение = новый Предложение();

		предложение.списокСлов = новый ПорядковыйСписок<>();
		предложение.списокСлов.добавь(новый Слово());
		предложение.списокСлов.добавь(новый Слово());
		предложение.списокСлов.дай(0).getОмонимы().добавь(новый Омоним());
		
		Фрагмент фрагмент = новый Фрагмент();
		
		предложение.списокФрагментов = новый ПорядковыйСписок<>();
		предложение.списокФрагментов.добавь(фрагмент);
		предложение.списокФрагментов.добавь(фрагмент);
		
		фрагмент.варианты = новый ПорядковыйСписок<>();
		фрагмент.варианты.добавь(новый Вариант());
		фрагмент.союзы = новый ПорядковыйСписок<>();
		фрагмент.союзы.добавь(новый ПозицияСоюза());
		фрагмент.типы = новый ПорядковыйСписок<>();
		фрагмент.типы.добавь(новый ТипФрагмента());
		фрагмент.предложение = предложение;
		фрагмент.setНачало(5);
		фрагмент.setКонец(20);
		
		предложение.списокСвязейФрагментов = новый ПорядковыйСписок<>();
		СвязьФрагментов связьФрагментов = новый СвязьФрагментов();
		предложение.списокСвязейФрагментов.добавь(связьФрагментов);

		связьФрагментов.setНачало(0);
		связьФрагментов.setКонец(23);
		
		marshaller.marshal(предложение, Система.вывод);

		Система.вывод.печатьстр();
	}
	
}
