/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> ѱ 2017.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2017 Anton Astafiev <anton@astafiev.me>. All rights reserved.
 *
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет эллиптика.ява.язык;

внеся java.util.Коллекция;
внеся org.elliptica.ling.Граммема;
внеся org.elliptica.ling.ТипГраммемы;



/**
 *
 * @автор Антон Александрович Астафьев {@буквально <anton@astafiev.me>} (Anton Astafiev)
 */
класс ФормыОтНачала воплощает ДелегатЛингвистикиВопл.ЦелевыеФормы {

	личный итоговый Коллекция<Граммема> целевыеГраммемы;
	личный итоговый ширцел маскаГраммем;

	доступный ФормыОтНачала(Коллекция<Граммема> целевыеГраммемы) {
		это.целевыеГраммемы = целевыеГраммемы;
		маскаГраммем = Граммема.маскаГраммем(целевыеГраммемы);
	}

	@Подмени
	доступный Коллекция<Граммема> дляФразы(Коллекция<Граммема> граммемы) {
		ширцел результат = Граммема.маскаГраммем(граммемы);
		для (ТипГраммемы типГраммемы : ТипГраммемы.values()) {
			ширцел маска = маскаГраммем & типГраммемы.маска();
			если (маска == 0) {
				возобнови;
			}
			результат &= ~типГраммемы.маска();
			результат |= маска;
		}
		верни Граммема.дайГраммемы(результат);
	}

}
