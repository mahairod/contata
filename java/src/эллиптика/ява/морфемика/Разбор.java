/*
 * Авторское право принадлежит Антону Александровичу Астафьеву <anton@astafiev.me> ѱ 2017.
 * Все права защищены и охраняются законом.
 * Copyright (c) 2017 Anton Astafiev <anton@astafiev.me>. All rights reserved.
 *
 *  Собственная лицензия Астафьева
 * Данный программный код является собственностью Астафьева Антона Александровича
 * и может быть использован только с его личного разрешения
 */

пакет эллиптика.ява.морфемика;

внеся java.util.БегунокСписка;
внеся java.util.Итератор;
внеся java.util.Список;
внеся org.elliptica.ling.Граммема;
внеся org.elliptica.ling.ЧастьРечи;
внеся эллиптика.ява.морфемика.ячейки.MorphemDescr;


/**
 *
 * @автор Антон Александрович Астафьев {@буквально <anton@astafiev.me>} (Anton Astafiev)
 */
доступный класс Разбор {

	доступный статичный логическое отглагольноеЛиИмя(Строка строка, ЧастьРечи частьРечи, ширцел маска_граммем) {
		если (частьРечи != ЧастьРечи.существительное){
			верни ложь;
		}
		Подборщик подборщик = Подборщик.экзмепляр();
		Список<Список<MorphemDescr>> варианты = подборщик.подбери(строка, частьРечи, маска_граммем);
		для (Список<MorphemDescr> структура: варианты){
			ЧастьРечи текЧР = ничто;
			для (БегунокСписка<MorphemDescr> бег = структура.итераторСписка(структура.размер()); бег.естьПредыдущий();){
				MorphemDescr морф = бег.предыдущий();
				если (морф.дайТип() != ТипМорфемы.СУФФИКС){
					прерви;
				}
				если (морф.цельСовместима(ЧастьРечи.существительное)){
					если (морф.дайИсходныйТип() == ЧастьРечи.глагол){
						верни истина;
					}
					возобнови;
				}
				если (морф.цельСовместима(ЧастьРечи.глагол)){
					текЧР = ЧастьРечи.глагол;
				}
				прерви;
			}
			если (текЧР == ЧастьРечи.глагол){
				верни истина;
			}
		}
		верни ложь;
	}
}
